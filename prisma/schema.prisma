generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model contacts {
  id           Int       @id @default(autoincrement())
  user_id      Int?
  linkedin_url String?
  email        String?   @db.VarChar(255)
  phone        String?   @db.VarChar(50)
  address      String?
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  users        users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model experiences {
  id              Int       @id @default(autoincrement())
  position_name   String?   @db.VarChar(255)
  company_name    String?   @db.VarChar(255)
  start_date      DateTime? @db.Date
  end_date        DateTime? @db.Date
  company_address String?
  job_description String?
  created_at      DateTime? @default(now()) @db.Timestamp(6)
}

model portfolio_collaborators {
  portfolio_id Int
  user_id      Int
  portfolios   portfolios @relation(fields: [portfolio_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users        users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([portfolio_id, user_id])
}

model portfolios {
  id                      Int                       @id @default(autoincrement())
  project_title           String?                   @db.VarChar(255)
  description             String?
  banner_url              String?
  project_start_date      DateTime?                 @db.Date
  project_end_date        DateTime?                 @db.Date
  image_preview           String[]
  ui_source               String?
  video_url               String?
  app_url                 String?
  repository_url          String?
  created_at              DateTime?                 @default(now()) @db.Timestamp(6)
  detail_description      String?
  fitur                   String[]
  project_result          String?
  stack                   String?
  stack_list              String[]
  portfolio_collaborators portfolio_collaborators[]
}

model testimonies {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  testimony  String?
  created_at DateTime? @default(now()) @db.Timestamp(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id                      Int                       @id @default(autoincrement())
  name                    String?                   @db.VarChar(255)
  about                   String?
  image_url               String?
  overview                String?
  job_title               String?                   @db.VarChar(255)
  created_at              DateTime?                 @default(now()) @db.Timestamp(6)
  contacts                contacts[]
  portfolio_collaborators portfolio_collaborators[]
  testimonies             testimonies[]
}
